---
name: Build a docker image and push it to AWS ECR
on: [push]

jobs:
  build:
    
    runs-on: ubuntu-latest
  
    name: Build and push
    
    env:
        PIPELINE_VARIABLE: abc
        IMAGE_NAME: 581851189815.dkr.ecr.us-east-2.amazonaws.com/rffsn-github-actions
        IMAGE_TAG: 0.0.1-SNAPSHOT
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Testing variables resolving
        run: |
            echo $PIPELINE_VARIABLE
            echo $IMAGE_NAME
            echo $IMAGE_TAG
            
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Maven (includes Docker image build)
        run: mvn --batch-mode --update-snapshots verify

#       - name: Build with Maven
#         run: mvn clean package
      
#      - name: Build image
#        run: |
#            docker build .

      - name: List images from local Github Docker
        run: |
            docker images
            
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=cdcdd15_rffsn-accounts
                   
#      - name: Analyze with SonarCloud
#        uses: sonarsource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Push to Amazon ECR docker registry
        run: |
            docker push $IMAGE_NAME:$IMAGE_TAG
            
      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}